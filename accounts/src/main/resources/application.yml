server:
  port: 8080

spring:
  application:
    name: "accounts"

  #Activates a profile by default
  profiles:
    active: prod

  datasource:
    url: jdbc:h2:mem:testdb  #  Uses an in-memory H2 database named testdb
    driverClassName: org.h2.Driver  #    Tells Spring which JDBC driver to use (H2 in this case).
    username: sa
    password: ''
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect    #  This tells Hibernate (the JPA provider) to generate SQL compatible with the H2 database.
    hibernate:
      ddl-auto: update   #  Automatically updates your database schema based on your JPA entity models.
    show-sql: true
  h2:
    console:
      enabled: true

  config:
#    optional - even if configserver is not connected, start the microservice
    import: "optional:configserver:http://localhost:8071/"

  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

management:
  endpoints:
    web:
      exposure:
        include: "*" # telling enable and expose all management endpoints supported by actuator(one of them is refresh related endpoints)
