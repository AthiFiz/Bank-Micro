spring:
  application:
    name: "gatewayserver"

#  Connect with the dicovery server(eureka) and locate the details about the all mivroservices
#  and forward the traffic from external clients to the individual microservoce
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true

      httpclient:
        connect-timeout: 1000
        response-timeout: 10s

#  Gateway server connects with configuration server and connect in startup
  config:
    import: "optional:configserver:http://localhost:8071/"


  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

management:
  endpoints:
    web:
      exposure:
        include: "*"
#  Enabling gateway related endpoints inside the actuator
  endpoint:
    gateway:
      access: unrestricted

  info:
    env:
      enabled: true

  metrics:
    tags:
      application: ${spring.application.name}


#Defined in githun config

#eureka:
#  instance:
#    preferIpAddress: true
#  client:
#    fetchRegistry: true
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: http://localhost:8070/eureka/


#server:
#  port: 8072

logging:
  level:
    com:
      micro:
        gatewayserver: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationOpenState: 10000

resilience4j:
  timelimiter:
    configs:
      default:
        timeoutDuration: 4s